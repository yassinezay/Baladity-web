{% extends 'base-back.html.twig' %}

{% block title %}Statistiques des équipements{% endblock %}

{% block body %}
<div class="row">
    <!-- Pie Chart Section -->
    <div class="col-lg-6">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Pie Chart - Statistiques des équipements par catégorie</h5>
                <div id="pieChart" style="min-height: 400px;"></div>
            </div>
        </div>
    </div>

    <!-- Line Chart Section -->
    <div class="col-lg-6">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Line Chart - Statistiques des équipements par jour</h5>
                <canvas id="lineChart" style="max-height: 400px;"></canvas>
            </div>
        </div>
    </div>
</div>

<!-- Bar Chart Section -->
<div class="row">
    <div class="col-lg-6">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Bar Chart - Statistiques des équipements par mois</h5>
                <canvas id="barChart" style="max-height: 400px;"></canvas>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript Section -->
<script src="https://cdn.jsdelivr.net/npm/echarts@5.2.2/dist/echarts.min.js"></script>
<script>
document.addEventListener("DOMContentLoaded", () => {
    // Pie Chart
// Utilisez les variables countEquipementsFixe et countEquipementsMobile pour le diagramme en camembert
const pieChartElement = document.getElementById("pieChart");
if (pieChartElement) {
    const pieChart = echarts.init(pieChartElement);
    pieChart.setOption({
        title: {
            text: 'Statistiques des équipements par catégorie',
            left: 'center'
        },
        tooltip: {
            trigger: 'item',
            formatter: '{a} <br/>{b} : {c} ({d}%)'
        },
        series: [{
            name: 'Statistiques des équipements',
            type: 'pie',
            radius: '50%',
            data: [
                { value: {{ countEquipementsFixe }}, name: 'Fixe' },
                { value: {{ countEquipementsMobile }}, name: 'Mobile' }
            ],
            emphasis: {
                itemStyle: {
                    shadowBlur: 10,
                    shadowOffsetX: 0,
                    shadowColor: 'rgba(0, 0, 0, 0.5)'
                }
            }
        }]
    });
} else {
    console.error("Erreur d'initialisation du diagramme en camembert.");
}

    // Line Chart
    const statsByDay = {{ equipementsParJour | json_encode | raw }};
    const lineChartElement = document.getElementById("lineChart");
    if (statsByDay && lineChartElement) {
        const dates = statsByDay.map(entry => entry.date);
        const counts = statsByDay.map(entry => entry.count);
        
        new Chart(lineChartElement, {
            type: 'line',
            data: {
                labels: dates,
                datasets: [{
                    label: 'Nombre des équipements par jour',
                    data: counts,
                    fill: false,
                    borderColor: 'rgb(75, 192, 192)',
                    tension: 0.1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    } else {
        console.error("Erreur d'initialisation du diagramme en ligne.");
    }

    // Bar Chart
    const statsByMonth = {{ equipementsParMois | json_encode | raw }};
    const barChartElement = document.getElementById("barChart");
    if (statsByMonth && barChartElement) {
        const months = statsByMonth.map(entry => entry.month);
        const counts = statsByMonth.map(entry => entry.count);
        
        new Chart(barChartElement, {
            type: 'bar',
            data: {
                labels: months,
                datasets: [{
                    label: 'Nombre des équipements par mois',
                    data: counts,
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgb(75, 192, 192)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    } else {
        console.error("Erreur d'initialisation du diagramme à barres.");
    }
});
</script>

{% endblock %}
