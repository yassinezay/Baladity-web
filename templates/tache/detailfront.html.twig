{% extends 'base-front.html.twig' %}
{% block title %}Détails de la Tâche{% endblock %}

{% block barreTitre %}
{% if 'Citoyen' in user.getTypeUser() %}
<li><a href="{{ path('app_main_front') }}" >Home</a></li>
					 <li class="dropdown"><a href="#"><span>Actualité</span> <i
						class="bi bi-chevron-down dropdown-indicator" class=""></i></a>
						<ul>
							<li><a href="{{ path('app_actualite') }}">Afficher Actualité</a></li>
							<li><a href="{{ path('app_publicite') }}">Afficher Publicité</a></li>
							<li><a href="{{ path('ajouterPub') }}">Ajouter Publicité</a></li>
						</ul>
					</li>
					 <li class="dropdown"><a href="#"><span>Reclamation</span> <i
						class="bi bi-chevron-down dropdown-indicator" class=""></i></a>
						<ul>
							<li><a href="{{ path('typeReclamationF') }}">Ajouter Réclamation</a></li>
							<li><a href="{{ path('afficherReclamationF') }}">Mes réclamations</a></li>
						</ul>
					</li>
                    <li class="dropdown"><a href="#"><span>Evénement</span> <i
						class="bi bi-chevron-down dropdown-indicator" class=""></i></a>
						<ul>
							<li><a href="{{ path('evenement_listCitoyen') }}">liste des Evenements</a></li>
							<li><a href="{{ path('ajouter_voteFront') }}">Ajouter proposition</a></li>
						</ul>
					</li>
					<li><a href="{{ path('chatgpt') }}">ChatGpt</a></li>
					<li><a href="contact.html">Contact</a></li>
                    <li><a href="contact.html">About Us</a></li>
					<li class="dropdown"><a href="#"><span>Profile</span> <i
						class="bi bi-chevron-down dropdown-indicator" class=""></i></a>
						<ul>
							<li><a href="{{ path('app_profile_fron') }}">Profile</a></li>
							<li><a href="{{ path('sign_out') }}">Logout</a></li>
						</ul>
					</li>
{% elseif 'Responsable employé' in user.getTypeUser() %}
<li><a href="{{ path('app_main_front') }}" >Home</a></li>
					<li class="dropdown"><a href="#"><span>Actualité</span> <i
						class="bi bi-chevron-down dropdown-indicator" class=""></i></a>
						<ul>
							<li><a href="{{ path('app_actualiteshowResponsable') }}">Afficher Actualité</a></li>
							<li><a href="{{ path('ajouterA2') }}">Ajouter Actualité</a></li>
						</ul>
					</li>
					 <li class="dropdown"><a href="#" ><span>Reclamation</span> <i
						class="bi bi-chevron-down dropdown-indicator" class=""></i></a>
						<ul>
							<li><a href="{{ path('typeReclamationF') }}">Ajouter Réclamation</a></li>
							<li><a href="{{ path('afficherReclamationF') }}">Mes réclamations</a></li>
						</ul>
					</li>
					 <li class="dropdown"><a href="#" ><span>Evenement</span> <i
						class="bi bi-chevron-down dropdown-indicator" class="active"></i></a>
						<ul>
							<li><a href="{{ path('evenement_listFront') }}">Liste des evenements</a></li>
							<li><a href="{{ path('ajouterFront_evenement') }}">Ajouter un evenement</a></li>
							<li><a href="{{ path('calendar') }}">Calendrier des evenements</a></li>
							<li><a href="{{ path('ajouter_voteFront') }}">Ajouter une proposition</a></li>
							<li><a href="{{ path('statsF') }}">Statistiques des evenements</a></li>


						</ul>
					</li>
					<li><a href="{{ path('equipement_show_responsable') }}">Equipement</a></li>
					<li><a href="{{ path('tache_listfront') }} " class="active">Taches</a></li>
					<li><a href="{{ path('chatgpt') }}">ChatGpt</a></li>
					 <li class="dropdown"><a href="#"><span>Profile</span> <i
						class="bi bi-chevron-down dropdown-indicator" class=""></i></a>
						<ul>
							<li><a href="{{ path('app_profile_fron') }}">Profile</a></li>
							<li><a href="{{ path('sign_out') }}">Logout</a></li>
						</ul>
					</li>
{% elseif 'Employé' in user.getTypeUser() %}
<li><a href="{{ path('app_main_front') }}">Home</a></li>
					 <li class="dropdown"><a href="#"><span>Actualité</span> <i
						class="bi bi-chevron-down dropdown-indicator" class=""></i></a>
						<ul>
							<li><a href="{{ path('app_actualite') }}">Afficher Actualité</a></li>
							<li><a href="{{ path('app_publicite') }}">Afficher Publicité</a></li>
							<li><a href="{{ path('ajouterPub') }}">Ajouter Publicité</a></li>
						</ul>
					</li>
					 <li class="dropdown"><a href="#"><span>Reclamation</span> <i
						class="bi bi-chevron-down dropdown-indicator" class=""></i></a>
						<ul>
							<li><a href="{{ path('typeReclamationF') }}">Ajouter Réclamation</a></li>
							<li><a href="{{ path('afficherReclamationF') }}">Mes réclamations</a></li>
						</ul>
					</li>
					  <li class="dropdown"><a href="#"><span>Evénement</span> <i
						class="bi bi-chevron-down dropdown-indicator" class=""></i></a>
						<ul>
							<li><a href="{{ path('evenement_listCitoyen') }}">liste des Evenements</a></li>
							<li><a href="{{ path('ajouter_voteFront') }}">Ajouter proposition</a></li>
						</ul>
					</li>
					<li><a href="{{ path('equipement_show_front') }}">Equipement</a></li>
					<li><a href="{{ path('tache_listfront') }}" class="active">Taches</a></li>
					<li><a href="{{ path('chatgpt') }}">ChatGpt</a></li>
					<li class="dropdown"><a href="#"><span>Profile</span> <i
						class="bi bi-chevron-down dropdown-indicator" class=""></i></a>
						<ul>
							<li><a href="{{ path('app_profile_fron') }}">Profile</a></li>
							<li><a href="{{ path('sign_out') }}">Logout</a></li>
						</ul>
					</li>

{% elseif 'Directeur' in user.getTypeUser() %}
<li><a href="{{ path('app_main_front') }}" >Home</a></li>
					<li class="dropdown"><a href="#"><span>Actualité</span> <i
						class="bi bi-chevron-down dropdown-indicator" class=""></i></a>
						<ul>
							<li><a href="{{ path('app_actualiteshowResponsable') }}">Afficher Actualité</a></li>
							<li><a href="{{ path('ajouterA2') }}">Ajouter Actualité</a></li>
						</ul>
					</li>
					 <li class="dropdown"><a href="#"><span>Reclamation</span> <i
						class="bi bi-chevron-down dropdown-indicator" class=""></i></a>
						<ul>
							<li><a href="{{ path('afficherReclamationFA') }}">les Réclamations</a></li>
							<li><a href="{{ path('statsReclamationF') }}">Statistiques des Réclamations</a></li>
							<li><a href="{{ path('chatbot') }}">Chat for help</a></li>
						</ul>
					</li>
					<li class="dropdown"><a href="#" class="active"><span>Evenement</span> <i
						class="bi bi-chevron-down dropdown-indicator" class="active"></i></a>
						<ul>
							<li><a href="{{ path('evenement_listFront') }}">Liste des evenements</a></li>
							<li><a href="{{ path('ajouterFront_evenement') }}">Ajouter un evenement</a></li>
							<li><a href="{{ path('calendar') }}">Calendrier des evenements</a></li>
							<li><a href="{{ path('ajouter_voteFront') }}">Ajouter une proposition</a></li>
                     <li><a href="{{ path('statsF') }}">Statistiques des evenements</a></li>

						</ul>
					</li>
					<li><a href="{{ path('equipement_show_responsable') }}">Equipement</a></li>
					<li><a href="{{ path('tache_listdir') }}">Taches</a></li>
					<li><a href="{{ path('chatgpt') }}">ChatGpt</a></li>
					<li class="dropdown"><a href="#"><span>Profile</span> <i
						class="bi bi-chevron-down dropdown-indicator" class=""></i></a>
						<ul>
							<li><a href="{{ path('app_profile_fron') }}">Profile</a></li>
							<li><a href="{{ path('sign_out') }}">Logout</a></li>
						</ul>
					</li>

{% endif %}

					
{% endblock %}
{% block body %}
<div class="container mt-4">
   <div id="chatbot-button" onclick="showChat()">
      <img src="{{ asset('back-office/img/chat-botT.gif') }}" alt="ChatBot" class="rounded-circle" style="width: 100px; height: auto;">
   </div>
   <div id="chat-container">
      <div id="chat-header" onclick="toggleChat()">Baladity</div>
      <div id="chat-area"></div>
      <input type="text" id="user-input">
      <button class="button" onclick="sendMessage()">Send</button>
      <button class="button" onclick="clearConversation()">Clear Conversation</button>
      <button class="button" onclick="hideChat()">Hide Chat</button>
   </div>
</div>
<div class="row">
<div class="col-md-6">
   <div class="card mb-3">
      <div class="card-body">
         <h5 class="card-title text-primary">Catégorie</h5>
         <div class="card-text">
            <h6>{{ tache.getNomCat() }}</h6>
         </div>
      </div>
   </div>
   <div class="card mb-3">
      <div class="card-body">
         <h5 class="card-title text-primary">Titre</h5>
         <div class="card-text">
            <h6>{{ tache.getTitreT() }}</h6>
         </div>
      </div>
   </div>
   <div class="card mb-3">
      <div class="card-body">
         <h5 class="card-title text-primary">Date Debut</h5>
         <div class="card-text">
            <h6>{{ tache.getDateDT()|date('d-m-Y') }}</h6>
         </div>
      </div>
   </div>
   <div class="card mb-3">
      <div class="card-body">
         <h5 class="card-title text-primary">Date Fin</h5>
         <div class="card-text">
            <h6>{{ tache.getDateFT()|date('d-m-Y') }}</h6>
         </div>
      </div>
   </div>
   <div class="card mb-3">
      <div class="card-body">
         <h5 class="card-title text-primary">Description</h5>
         <div class="row mb-3">
            <div class="col-sm-10">
               <h6><textarea class="form-control" style="height: 100px" readonly>{{ tache.getDescT() }}</textarea></h6>
            </div>
         </div>
      </div>
   </div>
   <div class="card mb-3">
      <div class="card-body">
         <h5 class="card-title text-primary">Etat</h5>
         <div class="card-text">
            <h6>{{ tache.getEtatT() }}</h6>
         </div>
      </div>
   </div>
   <!-- Comment Section -->
   <div class="card mb-3">
      <div class="card-body">
         <div class="comment-section">
            <h5 class="card-title text-primary">Commentaires</h5>
            {% if tache.getCommentaireTache() is not empty %}
            {% for commentaire in tache.getCommentaireTache() %}
            <div class="comment">
               <div>
                  <h6>Nom: {{ commentaire.getIdUser().getNomUser() }} | Date: {{ commentaire.getDateC()|date('d-m-Y') }}</h6>
                  <!-- Add Edit and Remove Options for the Comment -->
                  {% if userId == commentaire.getIdUser().getIdUser() %}
                  <div class="comment-options">
                     <button onclick="location.href='{{ path('commentairetache_updatedir', {'i': commentaire.getIdC()}) }}'" type="button" class="btn btn-outline-primary"><i class="bi bi-pencil"></i> Modifier</button>
                     <button onclick="location.href='{{ path('commentairetache_deletefront', {'i': commentaire.getIdC()}) }}'" type="button" class="btn btn-danger"><i class="bi bi-trash"></i> Supprimer</button>
                  </div>
                  {% endif %}
               </div>
               <h6><textarea class="form-control" style="height: 150px" readonly>{{ commentaire.getTexteC() }}</textarea></h6>
            </div>
            {% endfor %}
            {% endif %}
         </div>
      </div>
      <div class="container mt-4">
         <!-- Add Comment Form -->
         <hr>
         <div class="comment-section">
            {{ form_start(commentForm, {'attr': {'class': 'row g-3', 'novalidate': 'novalidate'}}) }}
            <h5 class="card-title text-primary">Ajouter un commentaire</h5>
            {{ form_widget(commentForm.texte_C, { 'attr': {'class': 'form-control', 'style': 'height: 150px'} }) }}
            {% if commentForm.texte_C.vars.errors|length > 0 %}
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
               <i class="bi bi-exclamation-octagon me-1"></i>
               {% for error in commentForm.texte_C.vars.errors %}
               {{ error.message }}
               {% endfor %}
               <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
            {% endif %}
            <div class="text-center">
               {{ form_widget(commentForm.Save, { 'attr': {'class': 'btn btn-outline-primary'}, 'label': 'Save' }) }}
               {{ form_widget(commentForm.Reset, { 'attr': {'class': 'btn btn-secondary'}, 'label': 'Reset' }) }}
            </div>
            {{ form_end(commentForm) }}
         </div>
      </div>
   </div>
   <div class="col-md-4" style="margin-top: 10px;">
      <!-- Adjust margin-top as needed -->
      <button onclick="goBack()" class="btn btn-outline-primary"><i class="bi bi-arrow-left"></i> Go Back</button>
      <script>
         function goBack() {
         	window.history.back();
         }
      </script>
   </div>
</div>
<div class="col-md-6">
   <div class="card shadow-sm">
      {% if tache.getPieceJointeT() %}
      {% set fileExtension = tache.getPieceJointeT()|split('.')|last %}
      {% if fileExtension in ['jpg', 'jpeg', 'png', 'gif'] %}
      <img src="{{ asset('uploads/' ~ tache.getPieceJointeT()) }}" class="card-img-top" alt="Piece jointe">
      <div class="card-body">
         <div class="card-text text-muted mt-3">
            Télécharger la pièce jointe : <a href="{{ asset('uploads/' ~ tache.getPieceJointeT()) }}">{{ tache.getPieceJointeT() }}</a>
         </div>
      </div>
      {% elseif fileExtension == 'pdf' %}
      {% set pdfPreviewPath = asset('uploads/' ~ tache.getPieceJointeT()) %}
      <embed src="{{ pdfPreviewPath }}" type="application/pdf" width="100%" height="500px" />
      <div class="card-body">
         <div class="card-text text-muted mt-3">
            Télécharger la pièce jointe : <a href="{{ asset('uploads/' ~ tache.getPieceJointeT()) }}">{{ tache.getPieceJointeT() }}</a>
         </div>
      </div>
      {% elseif fileExtension == 'txt' %}
      <div class="card-body">
         <h5 class="card-title text-primary">{{ tache.getPieceJointeT() }} :</h5>
      </div>
      {% set textFilePath = asset('uploads/' ~ tache.getPieceJointeT()) %}
      <iframe src="{{ textFilePath }}" class="card-text" style="width: 100%; min-height: 300px;"></iframe>
      <div class="card-body">
         <div class="card-text text-muted mt-3">
            Télécharger la pièce jointe : <a href="{{ asset('uploads/' ~ tache.getPieceJointeT()) }}">{{ tache.getPieceJointeT() }}</a>
         </div>
      </div>
      {% else %}
      <div class="card-body">
         <div class="card-text text-muted mt-3">
            Télécharger la pièce jointe : <a href="{{ asset('uploads/' ~ tache.getPieceJointeT()) }}">{{ tache.getPieceJointeT() }}</a>
         </div>
      </div>
      {% endif %}
      {% else %}
      <div class="card-body">
         <div class="card-text text-muted mt-3">
            Aucune pièce jointe pour cette tâche.
         </div>
      </div>
      {% endif %}
   </div>
</div>
<style>
   /* Chat Container Styling */
   #chat-container {
   display: none;
   position: fixed;
   bottom: 60px;
   right: 20px;
   width: 400px;
   height: 400px;
   border: 1px solid #ccc;
   border-radius: 10px;
   background-color: #f9f9f9;
   box-shadow: 0px 0px 10px 0px rgba(0,0,0,0.5);
   overflow: hidden;
   font-family: Arial, sans-serif;
   z-index: 9999; /* Set a high z-index value */
   }
   /* Chat Header Styling */
   #chat-header {
   background-color: #4285f4;
   color: #fff;
   padding: 10px;
   cursor: pointer;
   }
   /* Chat Area Styling */
   #chat-area {
   height: calc(100% - 150px); /* Changed height calculation */
   overflow-y: auto;
   padding: 10px;
   border-bottom: 1px solid #ccc;
   color: #012545;
   }
   /* Input Field Styling */
   #user-input {
   width: calc(100% - 20px);
   margin: 10px;
   padding: 5px;
   border: 1px solid #ccc;
   border-radius: 5px;
   }
   /* Button Styling */
   .button {
   width: calc(50% - 15px);
   margin: 5px;
   padding: 10px;
   border: none;
   border-radius: 5px;
   background-color: #4285f4;
   color: #fff;
   cursor: pointer;
   }
   .button:hover {
   background-color: #3c78dc;
   }
   /* ChatBot Button Styling */
   #chatbot-button {
   position: fixed;
   bottom: 60px; /* Change bottom to top */
   right: 20px;
   cursor: pointer;
   z-index: 9999; /* Set a high z-index value */
   }
   #chatbot-button img {
   width: 100px;
   height: auto;
   border-radius: 50%;
   z-index: 10000; /* Set a higher z-index value than the container */
   }
   /* The switch - the box around the slider */
   .switch {
   display: block;
   --width-of-switch: 3.5em;
   --height-of-switch: 2em;
   /* size of sliding icon -- sun and moon */
   --size-of-icon: 1.4em;
   /* it is like a inline-padding of switch */
   --slider-offset: 0.3em;
   position: relative;
   width: var(--width-of-switch);
   height: var(--height-of-switch);
   }
   /* Hide default HTML checkbox */
   .switch input {
   opacity: 0;
   width: 0;
   height: 0;
   }
   /* The slider */
   .slider {
   position: absolute;
   cursor: pointer;
   top: 0;
   left: 0;
   right: 0;
   bottom: 0;
   background-color: #f4f4f5;
   transition: .4s;
   border-radius: 30px;
   }
   .slider:before {
   position: absolute;
   content: "";
   height: var(--size-of-icon,1.4em);
   width: var(--size-of-icon,1.4em);
   border-radius: 20px;
   left: var(--slider-offset,0.3em);
   top: 50%;
   transform: translateY(-50%);
   background: #c31432; /* fallback for old browsers */
   background: -webkit-linear-gradient(to right, #c31432, #240b36); /* Chrome 10-25, Safari 5.1-6 */
   background: linear-gradient(to right, #c31432, #240b36);
   ;
   transition: .4s;
   }
   input:checked + .slider {
   background-color: #303136;
   }
   input:checked + .slider:before {
   left: calc(100% - (var(--size-of-icon,1.4em) + var(--slider-offset,0.3em)));
   background: #303136;
   /* change the value of second inset in box-shadow to change the angle and direction of the moon  */
   box-shadow: inset -3px -2px 5px -2px #8983f7, inset -10px -4px 0 0 #a3dafb;
   }
</style>
<style>
   /* Dark Mode Styles */
   .dark-mode {
   /* Background color */
   background-color: #121212;
   color: #ffffff; /* Text color */
   /* Card background color */
   .card {
   background-color: #1e1e1e;
   color: #ffffff; /* Card text color */
   }
   /* Card header background color */
   .card-header {
   background-color: #2e2e2e;
   color: #ffffff; /* Card header text color */
   }
   /* Button background color */
   .btn {
   background-color: #424242;
   color: #ffffff; /* Button text color */
   }
   /* Button hover background color */
   .btn:hover {
   background-color: #555555;
   }
   /* Input background color */
   input {
   background-color: #333333;
   color: #ffffff; /* Input text color */
   }
   /* Slider background color */
   .slider {
   background-color: #555555;
   }
   /* Slider before color */
   .slider:before {
   background: linear-gradient(40deg, #ff0080, #ff8c00 70%);
   box-shadow: inset -3px -2px 5px -2px #8983f7, inset -10px -4px 0 0 #a3dafb;
   }
   /* Task counter color */
   .task-counter {
   color: #ffffff;
   }
   /* Chat container background color */
   #chat-container {
   background-color: #212121;
   }
   /* Chat header background color */
   #chat-header {
   background-color: #333333;
   color: #ffffff; /* Chat header text color */
   }
   /* Chat area background color */
   #chat-area {
   background-color: #2c2c2c;
   color: #ffffff; /* Chat area text color */
   }
   /* Chat input background color */
   #user-input {
   background-color: #333333;
   color: #ffffff; /* Chat input text color */
   }
   /* Chat button background color */
   .button {
   background-color: #424242;
   color: #ffffff; /* Chat button text color */
   }
   /* Chat bot button image filter */
   #chatbot-button img {
   filter: invert(1);
   }
   /* Alert background color */
   .alert {
   background-color: #333333;
   border-color: #555555;
   color: #ffffff; /* Alert text color */
   }
   /* Alert close button background color */
   .btn-close {
   filter: invert(1);
   }
   }
</style>
<script>
   // Function to toggle dark mode
   function toggleDarkMode() {
       var body = document.body;
       body.classList.toggle('dark-mode');
   }
   
   // Add event listener to the checkbox
   document.getElementById('dark-mode-checkbox').addEventListener('change', function() {
       toggleDarkMode();
   });
</script>
<script>
   document.addEventListener("DOMContentLoaded", function() {
       var userInputField = document.getElementById('user-input');
       userInputField.addEventListener("keypress", function(event) {
           if (event.key === "Enter") {
               sendMessage();
           }
       });
   });
       function toggleChat() {
           var chatContainer = document.getElementById('chat-container');
           chatContainer.style.display = chatContainer.style.display === 'none' ? 'block' : 'none';
       }
   
       function showChat() {
           var chatContainer = document.getElementById('chat-container');
           chatContainer.style.display = 'block';
       }
   
       function sendMessage() {
           var userInput = document.getElementById('user-input').value;
           var chatArea = document.getElementById('chat-area');
   
           var formData = new FormData();
           formData.append('user_input', userInput);
   
           fetch('{{ path('chatbot_process') }}', {
               method: 'POST',
               body: formData
           })
           .then(response => response.text())
           .then(data => {
               chatArea.innerHTML += 'You: ' + userInput + '<br>';
               chatArea.innerHTML += 'ChatBot: ' + data + '<br>';
           });
   
           // Clear user input field
           document.getElementById('user-input').value = '';
           document.getElementById('user-input').focus();
       }
   
       function clearConversation() {
           var chatArea = document.getElementById('chat-area');
           chatArea.innerHTML = '';
       }
   
       function hideChat() {
           var chatContainer = document.getElementById('chat-container');
           chatContainer.style.display = 'none';
       }
</script>
{% endblock %}
{%block rest%}{% endblock %}